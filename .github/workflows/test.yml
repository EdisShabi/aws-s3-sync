name: Deploy to Environment
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        type: string
        default: DEV
        required: true
permissions:
  id-token: write
  contents: read

jobs:
  c4build:
    runs-on: 
      ubuntu-latest
    outputs:
      build_path: ${{steps.build_path.outputs.path}}
    steps:
      - name: c4 clone
        uses: actions/checkout@v3
        with:
          repository: exasol/ccc
          ref: main
          token: ${{secrets.CCC_GITHUB_TOKEN}}
          path: c4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v3
        with:  
          go-version: '1.18.1'
          check-latest: true
      - name: c4 build
        run: |
          cd ${{github.workspace}}/c4/
          config/ccc make
      - name: get build ui path
        uses: mathiasvr/command-output@v1
        id: build_path
        with:
          run: |
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY}}
            export AWS_SESSION_TOKEN=${{ secrets.AWS_SESSION_TOKEN }}
            CCC_AWS_REGION=eu-west-1 ${{github.workspace}}/c4/bin/c4 fetch @ui-1.180.0
      - name: Upload the Fetch
        uses: actions/upload-artifact@v3
        with:
          name: ui
          path: ~/.ccc/x/u/branchr/
  
  dev:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' || github.event.inputs.environment == 'DEV' }}
    name: Push to Dev Environment
    needs: [c4build]
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TOKEN }}
          role-session-name: github-actions-session-role
          aws-region: 'us-east-1'
      - name: check files
        uses: actions/download-artifact@v3
        with:
          name: ui
      - shell: bash
        run: |
          dir=$(echo */)
          cd $dir/dist/apps
          aws s3 sync maintenance/. s3://dev-saas-cd
          aws s3 sync saas/. s3://dev-saas-cd

  staging:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' || github.event.inputs.environment == 'STAGING' }}
    name: Push to Staging Environment
    needs: [c4build]
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TOKEN }}
          role-session-name: github-actions-session-role
          aws-region: 'us-east-1'
      - name: check files
        uses: actions/download-artifact@v3
        with:
          name: ui
      - shell: bash
        run: |
          dir=$(echo */)
          cd $dir/dist/apps
          aws s3 sync maintenance/. s3://dev-saas-cd
          aws s3 sync saas/. s3://dev-saas-cd

  prod:
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' || github.event.inputs.environment == 'PROD' }}
    name: Push to Prod Environment
    needs: [c4build]
    runs-on: ubuntu-latest
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ROLE_TOKEN }}
          role-session-name: github-actions-session-role
          aws-region: 'us-east-1'
      - name: check files
        uses: actions/download-artifact@v3
        with:
          name: ui
      - shell: bash
        run: |
          dir=$(echo */)
          cd $dir/dist/apps
          aws s3 sync maintenance/. s3://dev-saas-cd
          aws s3 sync saas/. s3://dev-saas-cd


          

